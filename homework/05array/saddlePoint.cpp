///**
// *Description
//输入一个二维 (5*5)数组，每行只有一个最大值，每列只有一个最小值。
//如果存在鞍点，则输出鞍点所在的位置（行和列），不存在鞍点时，要输出“not found”。
//鞍点指的是数组中的一个元素，它是所在行的最大值，并且是所在列的最小值。
//例如：在下面的例子中（第4行第1列的元素就是鞍点，值为8 ）。
//11 3 5 6 9
//12 4 7 8 10
//10 5 6 9 11
//8 6 4 7 2
//15 10 11 20 25
//Input
//输入包含一个5行5列的矩阵
//Output
//如果存在鞍点，输出鞍点所在的行、列及其值，如果不存在，输出"not found"
//Sample Input
//11 3 5 6 9
//12 4 7 8 10
//10 5 6 9 11
//8  6 4 7 2
//15 10 11 20 25
//Sample Output
//4 1 8
//Hint
//无
//
// 解题思路；
//    找一个二维数组接受数据
// */
//#include <stdio.h>
//int main()
//{
//    int max, min, nk, ni;
//    int a[50][50];
//    for (int i = 0; i < 5; ++i)
//    {
//        for (int j = 0; j < 5; ++j)
//        {
//            scanf("%d",&a[i][j]);
//        }
//    }
//
//    for (int k = 0; k < 5; ++k)
//    {
//        //记录每行的首元素
//        max = a[k][0];
//        for (int i = 1; i < 5; ++i)
//        {
//            if(a[k][i] > max)
//            {
//                nk = k; //记录数据的行
//                ni = i; //记录数据的列
//                max = a[k][i];// 循环完了，就拿到了本行的最大值
//            }else
//            {
//                // 如果是第一列最大，那么也需要记录
//                nk = k; //记录数据的行
//                ni = 0; //记录数据的列
//            }
//        }
//        //查找 该最大值所在的列 是否是最小值
//        min = max;
//        for (int j = 0; j < 5; ++j)
//        {
//            if(a[j][ni] < max)
//            {
//                min = a[j][ni];
//                break;
//            }
//        }
//        //如果行最大==列最小 就是鞍点，输出即可
//        if(max == min)
//            printf("%d %d %d",nk+1,ni+1,max);
//    }
//    return 0;
//}
